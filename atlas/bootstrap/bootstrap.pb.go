//
// This file is part of Atlas-DB.
//
// Atlas-DB is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of
// the License, or (at your option) any later version.
//
// Atlas-DB is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with Atlas-DB. If not, see <https://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v5.29.3
// source: bootstrap/bootstrap.proto

package bootstrap

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BootstrapRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       int64                  `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootstrapRequest) Reset() {
	*x = BootstrapRequest{}
	mi := &file_bootstrap_bootstrap_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootstrapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootstrapRequest) ProtoMessage() {}

func (x *BootstrapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bootstrap_bootstrap_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootstrapRequest.ProtoReflect.Descriptor instead.
func (*BootstrapRequest) Descriptor() ([]byte, []int) {
	return file_bootstrap_bootstrap_proto_rawDescGZIP(), []int{0}
}

func (x *BootstrapRequest) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type IncompatibleVersion struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NeedsVersion  int64                  `protobuf:"varint,1,opt,name=needsVersion,proto3" json:"needsVersion,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IncompatibleVersion) Reset() {
	*x = IncompatibleVersion{}
	mi := &file_bootstrap_bootstrap_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IncompatibleVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncompatibleVersion) ProtoMessage() {}

func (x *IncompatibleVersion) ProtoReflect() protoreflect.Message {
	mi := &file_bootstrap_bootstrap_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncompatibleVersion.ProtoReflect.Descriptor instead.
func (*IncompatibleVersion) Descriptor() ([]byte, []int) {
	return file_bootstrap_bootstrap_proto_rawDescGZIP(), []int{1}
}

func (x *IncompatibleVersion) GetNeedsVersion() int64 {
	if x != nil {
		return x.NeedsVersion
	}
	return 0
}

type BootstrapData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       int64                  `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootstrapData) Reset() {
	*x = BootstrapData{}
	mi := &file_bootstrap_bootstrap_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootstrapData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootstrapData) ProtoMessage() {}

func (x *BootstrapData) ProtoReflect() protoreflect.Message {
	mi := &file_bootstrap_bootstrap_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootstrapData.ProtoReflect.Descriptor instead.
func (*BootstrapData) Descriptor() ([]byte, []int) {
	return file_bootstrap_bootstrap_proto_rawDescGZIP(), []int{2}
}

func (x *BootstrapData) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *BootstrapData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type BootstrapResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Response:
	//
	//	*BootstrapResponse_IncompatibleVersion
	//	*BootstrapResponse_BootstrapData
	Response      isBootstrapResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootstrapResponse) Reset() {
	*x = BootstrapResponse{}
	mi := &file_bootstrap_bootstrap_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootstrapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootstrapResponse) ProtoMessage() {}

func (x *BootstrapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bootstrap_bootstrap_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootstrapResponse.ProtoReflect.Descriptor instead.
func (*BootstrapResponse) Descriptor() ([]byte, []int) {
	return file_bootstrap_bootstrap_proto_rawDescGZIP(), []int{3}
}

func (x *BootstrapResponse) GetResponse() isBootstrapResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *BootstrapResponse) GetIncompatibleVersion() *IncompatibleVersion {
	if x != nil {
		if x, ok := x.Response.(*BootstrapResponse_IncompatibleVersion); ok {
			return x.IncompatibleVersion
		}
	}
	return nil
}

func (x *BootstrapResponse) GetBootstrapData() *BootstrapData {
	if x != nil {
		if x, ok := x.Response.(*BootstrapResponse_BootstrapData); ok {
			return x.BootstrapData
		}
	}
	return nil
}

type isBootstrapResponse_Response interface {
	isBootstrapResponse_Response()
}

type BootstrapResponse_IncompatibleVersion struct {
	IncompatibleVersion *IncompatibleVersion `protobuf:"bytes,1,opt,name=incompatibleVersion,proto3,oneof"`
}

type BootstrapResponse_BootstrapData struct {
	BootstrapData *BootstrapData `protobuf:"bytes,2,opt,name=bootstrapData,proto3,oneof"`
}

func (*BootstrapResponse_IncompatibleVersion) isBootstrapResponse_Response() {}

func (*BootstrapResponse_BootstrapData) isBootstrapResponse_Response() {}

type DatabaseSnapshot struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MetaEntries   []*KVEntry             `protobuf:"bytes,1,rep,name=MetaEntries,proto3" json:"MetaEntries,omitempty"`
	DataEntries   []*KVEntry             `protobuf:"bytes,2,rep,name=DataEntries,proto3" json:"DataEntries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseSnapshot) Reset() {
	*x = DatabaseSnapshot{}
	mi := &file_bootstrap_bootstrap_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseSnapshot) ProtoMessage() {}

func (x *DatabaseSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_bootstrap_bootstrap_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseSnapshot.ProtoReflect.Descriptor instead.
func (*DatabaseSnapshot) Descriptor() ([]byte, []int) {
	return file_bootstrap_bootstrap_proto_rawDescGZIP(), []int{4}
}

func (x *DatabaseSnapshot) GetMetaEntries() []*KVEntry {
	if x != nil {
		return x.MetaEntries
	}
	return nil
}

func (x *DatabaseSnapshot) GetDataEntries() []*KVEntry {
	if x != nil {
		return x.DataEntries
	}
	return nil
}

type KVEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           []byte                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KVEntry) Reset() {
	*x = KVEntry{}
	mi := &file_bootstrap_bootstrap_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KVEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KVEntry) ProtoMessage() {}

func (x *KVEntry) ProtoReflect() protoreflect.Message {
	mi := &file_bootstrap_bootstrap_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KVEntry.ProtoReflect.Descriptor instead.
func (*KVEntry) Descriptor() ([]byte, []int) {
	return file_bootstrap_bootstrap_proto_rawDescGZIP(), []int{5}
}

func (x *KVEntry) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *KVEntry) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_bootstrap_bootstrap_proto protoreflect.FileDescriptor

const file_bootstrap_bootstrap_proto_rawDesc = "" +
	"\n" +
	"\x19bootstrap/bootstrap.proto\x12\x0fatlas.bootstrap\",\n" +
	"\x10BootstrapRequest\x12\x18\n" +
	"\aversion\x18\x01 \x01(\x03R\aversion\"9\n" +
	"\x13IncompatibleVersion\x12\"\n" +
	"\fneedsVersion\x18\x01 \x01(\x03R\fneedsVersion\"=\n" +
	"\rBootstrapData\x12\x18\n" +
	"\aversion\x18\x01 \x01(\x03R\aversion\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\"\xc1\x01\n" +
	"\x11BootstrapResponse\x12X\n" +
	"\x13incompatibleVersion\x18\x01 \x01(\v2$.atlas.bootstrap.IncompatibleVersionH\x00R\x13incompatibleVersion\x12F\n" +
	"\rbootstrapData\x18\x02 \x01(\v2\x1e.atlas.bootstrap.BootstrapDataH\x00R\rbootstrapDataB\n" +
	"\n" +
	"\bresponse\"\x8a\x01\n" +
	"\x10DatabaseSnapshot\x12:\n" +
	"\vMetaEntries\x18\x01 \x03(\v2\x18.atlas.bootstrap.KVEntryR\vMetaEntries\x12:\n" +
	"\vDataEntries\x18\x02 \x03(\v2\x18.atlas.bootstrap.KVEntryR\vDataEntries\"1\n" +
	"\aKVEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\fR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value2j\n" +
	"\tBootstrap\x12]\n" +
	"\x10GetBootstrapData\x12!.atlas.bootstrap.BootstrapRequest\x1a\".atlas.bootstrap.BootstrapResponse\"\x000\x01B\fZ\n" +
	"/bootstrapb\x06proto3"

var (
	file_bootstrap_bootstrap_proto_rawDescOnce sync.Once
	file_bootstrap_bootstrap_proto_rawDescData []byte
)

func file_bootstrap_bootstrap_proto_rawDescGZIP() []byte {
	file_bootstrap_bootstrap_proto_rawDescOnce.Do(func() {
		file_bootstrap_bootstrap_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_bootstrap_bootstrap_proto_rawDesc), len(file_bootstrap_bootstrap_proto_rawDesc)))
	})
	return file_bootstrap_bootstrap_proto_rawDescData
}

var file_bootstrap_bootstrap_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_bootstrap_bootstrap_proto_goTypes = []any{
	(*BootstrapRequest)(nil),    // 0: atlas.bootstrap.BootstrapRequest
	(*IncompatibleVersion)(nil), // 1: atlas.bootstrap.IncompatibleVersion
	(*BootstrapData)(nil),       // 2: atlas.bootstrap.BootstrapData
	(*BootstrapResponse)(nil),   // 3: atlas.bootstrap.BootstrapResponse
	(*DatabaseSnapshot)(nil),    // 4: atlas.bootstrap.DatabaseSnapshot
	(*KVEntry)(nil),             // 5: atlas.bootstrap.KVEntry
}
var file_bootstrap_bootstrap_proto_depIdxs = []int32{
	1, // 0: atlas.bootstrap.BootstrapResponse.incompatibleVersion:type_name -> atlas.bootstrap.IncompatibleVersion
	2, // 1: atlas.bootstrap.BootstrapResponse.bootstrapData:type_name -> atlas.bootstrap.BootstrapData
	5, // 2: atlas.bootstrap.DatabaseSnapshot.MetaEntries:type_name -> atlas.bootstrap.KVEntry
	5, // 3: atlas.bootstrap.DatabaseSnapshot.DataEntries:type_name -> atlas.bootstrap.KVEntry
	0, // 4: atlas.bootstrap.Bootstrap.GetBootstrapData:input_type -> atlas.bootstrap.BootstrapRequest
	3, // 5: atlas.bootstrap.Bootstrap.GetBootstrapData:output_type -> atlas.bootstrap.BootstrapResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_bootstrap_bootstrap_proto_init() }
func file_bootstrap_bootstrap_proto_init() {
	if File_bootstrap_bootstrap_proto != nil {
		return
	}
	file_bootstrap_bootstrap_proto_msgTypes[3].OneofWrappers = []any{
		(*BootstrapResponse_IncompatibleVersion)(nil),
		(*BootstrapResponse_BootstrapData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_bootstrap_bootstrap_proto_rawDesc), len(file_bootstrap_bootstrap_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bootstrap_bootstrap_proto_goTypes,
		DependencyIndexes: file_bootstrap_bootstrap_proto_depIdxs,
		MessageInfos:      file_bootstrap_bootstrap_proto_msgTypes,
	}.Build()
	File_bootstrap_bootstrap_proto = out.File
	file_bootstrap_bootstrap_proto_goTypes = nil
	file_bootstrap_bootstrap_proto_depIdxs = nil
}
