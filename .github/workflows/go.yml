# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


permissions:
    contents: read
    pull-requests: read
    checks: write

jobs:

  build:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.4'
        cache: true

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  lint:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.4'
        cache: true

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: v1.60
        only-new-issues: true

  auto-merge:
    runs-on: self-hosted
    needs: [build, lint]
    if: github.actor == 'dependabot[bot]'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Merge Dependabot PR
        uses: actions/github-script@v6
        with:
          script: |
            const { context, github } = require('@actions/github');
            const pr = context.payload.pull_request;
            await github.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
              merge_method: 'squash'
            });
