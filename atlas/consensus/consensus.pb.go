// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.21.12
// source: consensus/consensus.proto

package consensus

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TopologyChange int32

const (
	TopologyChange_UNKNOWN TopologyChange = 0
	TopologyChange_ADD     TopologyChange = 1
	TopologyChange_REMOVE  TopologyChange = 2
)

// Enum value maps for TopologyChange.
var (
	TopologyChange_name = map[int32]string{
		0: "UNKNOWN",
		1: "ADD",
		2: "REMOVE",
	}
	TopologyChange_value = map[string]int32{
		"UNKNOWN": 0,
		"ADD":     1,
		"REMOVE":  2,
	}
)

func (x TopologyChange) Enum() *TopologyChange {
	p := new(TopologyChange)
	*p = x
	return p
}

func (x TopologyChange) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TopologyChange) Descriptor() protoreflect.EnumDescriptor {
	return file_consensus_consensus_proto_enumTypes[0].Descriptor()
}

func (TopologyChange) Type() protoreflect.EnumType {
	return &file_consensus_consensus_proto_enumTypes[0]
}

func (x TopologyChange) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TopologyChange.Descriptor instead.
func (TopologyChange) EnumDescriptor() ([]byte, []int) {
	return file_consensus_consensus_proto_rawDescGZIP(), []int{0}
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId      int64  `protobuf:"varint,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	NodeAddress string `protobuf:"bytes,2,opt,name=nodeAddress,proto3" json:"nodeAddress,omitempty"`
	NodeRegion  string `protobuf:"bytes,3,opt,name=nodeRegion,proto3" json:"nodeRegion,omitempty"`
	NodePort    int64  `protobuf:"varint,4,opt,name=nodePort,proto3" json:"nodePort,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_consensus_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_consensus_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_consensus_consensus_proto_rawDescGZIP(), []int{0}
}

func (x *Node) GetNodeId() int64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *Node) GetNodeAddress() string {
	if x != nil {
		return x.NodeAddress
	}
	return ""
}

func (x *Node) GetNodeRegion() string {
	if x != nil {
		return x.NodeRegion
	}
	return ""
}

func (x *Node) GetNodePort() int64 {
	if x != nil {
		return x.NodePort
	}
	return 0
}

type Region struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionName string `protobuf:"bytes,1,opt,name=regionName,proto3" json:"regionName,omitempty"`
	RegionId   int64  `protobuf:"varint,2,opt,name=regionId,proto3" json:"regionId,omitempty"`
}

func (x *Region) Reset() {
	*x = Region{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_consensus_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Region) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Region) ProtoMessage() {}

func (x *Region) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_consensus_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Region.ProtoReflect.Descriptor instead.
func (*Region) Descriptor() ([]byte, []int) {
	return file_consensus_consensus_proto_rawDescGZIP(), []int{1}
}

func (x *Region) GetRegionName() string {
	if x != nil {
		return x.RegionName
	}
	return ""
}

func (x *Region) GetRegionId() int64 {
	if x != nil {
		return x.RegionId
	}
	return 0
}

type ProposeTopologyChangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Change:
	//
	//	*ProposeTopologyChangeRequest_RegionChange
	//	*ProposeTopologyChangeRequest_NodeChange
	Change isProposeTopologyChangeRequest_Change `protobuf_oneof:"change"`
}

func (x *ProposeTopologyChangeRequest) Reset() {
	*x = ProposeTopologyChangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_consensus_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposeTopologyChangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposeTopologyChangeRequest) ProtoMessage() {}

func (x *ProposeTopologyChangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_consensus_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposeTopologyChangeRequest.ProtoReflect.Descriptor instead.
func (*ProposeTopologyChangeRequest) Descriptor() ([]byte, []int) {
	return file_consensus_consensus_proto_rawDescGZIP(), []int{2}
}

func (m *ProposeTopologyChangeRequest) GetChange() isProposeTopologyChangeRequest_Change {
	if m != nil {
		return m.Change
	}
	return nil
}

func (x *ProposeTopologyChangeRequest) GetRegionChange() *ProposeRegionTopologyChange {
	if x, ok := x.GetChange().(*ProposeTopologyChangeRequest_RegionChange); ok {
		return x.RegionChange
	}
	return nil
}

func (x *ProposeTopologyChangeRequest) GetNodeChange() *ProposeNodeTopologyChange {
	if x, ok := x.GetChange().(*ProposeTopologyChangeRequest_NodeChange); ok {
		return x.NodeChange
	}
	return nil
}

type isProposeTopologyChangeRequest_Change interface {
	isProposeTopologyChangeRequest_Change()
}

type ProposeTopologyChangeRequest_RegionChange struct {
	RegionChange *ProposeRegionTopologyChange `protobuf:"bytes,1,opt,name=regionChange,proto3,oneof"`
}

type ProposeTopologyChangeRequest_NodeChange struct {
	NodeChange *ProposeNodeTopologyChange `protobuf:"bytes,2,opt,name=nodeChange,proto3,oneof"`
}

func (*ProposeTopologyChangeRequest_RegionChange) isProposeTopologyChangeRequest_Change() {}

func (*ProposeTopologyChangeRequest_NodeChange) isProposeTopologyChangeRequest_Change() {}

type ProposeRegionTopologyChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region *Region        `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	Kind   TopologyChange `protobuf:"varint,2,opt,name=kind,proto3,enum=atlas.consensus.TopologyChange" json:"kind,omitempty"`
}

func (x *ProposeRegionTopologyChange) Reset() {
	*x = ProposeRegionTopologyChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_consensus_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposeRegionTopologyChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposeRegionTopologyChange) ProtoMessage() {}

func (x *ProposeRegionTopologyChange) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_consensus_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposeRegionTopologyChange.ProtoReflect.Descriptor instead.
func (*ProposeRegionTopologyChange) Descriptor() ([]byte, []int) {
	return file_consensus_consensus_proto_rawDescGZIP(), []int{3}
}

func (x *ProposeRegionTopologyChange) GetRegion() *Region {
	if x != nil {
		return x.Region
	}
	return nil
}

func (x *ProposeRegionTopologyChange) GetKind() TopologyChange {
	if x != nil {
		return x.Kind
	}
	return TopologyChange_UNKNOWN
}

type ProposeNodeTopologyChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *Node          `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Kind TopologyChange `protobuf:"varint,2,opt,name=kind,proto3,enum=atlas.consensus.TopologyChange" json:"kind,omitempty"`
}

func (x *ProposeNodeTopologyChange) Reset() {
	*x = ProposeNodeTopologyChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_consensus_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposeNodeTopologyChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposeNodeTopologyChange) ProtoMessage() {}

func (x *ProposeNodeTopologyChange) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_consensus_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposeNodeTopologyChange.ProtoReflect.Descriptor instead.
func (*ProposeNodeTopologyChange) Descriptor() ([]byte, []int) {
	return file_consensus_consensus_proto_rawDescGZIP(), []int{4}
}

func (x *ProposeNodeTopologyChange) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *ProposeNodeTopologyChange) GetKind() TopologyChange {
	if x != nil {
		return x.Kind
	}
	return TopologyChange_UNKNOWN
}

type PromiseTopologyChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Promise bool `protobuf:"varint,1,opt,name=promise,proto3" json:"promise,omitempty"`
	// Types that are assignable to Response:
	//
	//	*PromiseTopologyChange_Node
	//	*PromiseTopologyChange_Region
	Response isPromiseTopologyChange_Response `protobuf_oneof:"response"`
}

func (x *PromiseTopologyChange) Reset() {
	*x = PromiseTopologyChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_consensus_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromiseTopologyChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromiseTopologyChange) ProtoMessage() {}

func (x *PromiseTopologyChange) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_consensus_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromiseTopologyChange.ProtoReflect.Descriptor instead.
func (*PromiseTopologyChange) Descriptor() ([]byte, []int) {
	return file_consensus_consensus_proto_rawDescGZIP(), []int{5}
}

func (x *PromiseTopologyChange) GetPromise() bool {
	if x != nil {
		return x.Promise
	}
	return false
}

func (m *PromiseTopologyChange) GetResponse() isPromiseTopologyChange_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *PromiseTopologyChange) GetNode() *Node {
	if x, ok := x.GetResponse().(*PromiseTopologyChange_Node); ok {
		return x.Node
	}
	return nil
}

func (x *PromiseTopologyChange) GetRegion() *Region {
	if x, ok := x.GetResponse().(*PromiseTopologyChange_Region); ok {
		return x.Region
	}
	return nil
}

type isPromiseTopologyChange_Response interface {
	isPromiseTopologyChange_Response()
}

type PromiseTopologyChange_Node struct {
	Node *Node `protobuf:"bytes,2,opt,name=node,proto3,oneof"`
}

type PromiseTopologyChange_Region struct {
	Region *Region `protobuf:"bytes,3,opt,name=region,proto3,oneof"`
}

func (*PromiseTopologyChange_Node) isPromiseTopologyChange_Response() {}

func (*PromiseTopologyChange_Region) isPromiseTopologyChange_Response() {}

var File_consensus_consensus_proto protoreflect.FileDescriptor

var file_consensus_consensus_proto_rawDesc = []byte{
	0x0a, 0x19, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x73,
	0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x61, 0x74, 0x6c,
	0x61, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x22, 0x7c, 0x0a, 0x04,
	0x4e, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x6e, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x22, 0x44, 0x0a, 0x06, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0xca, 0x01, 0x0a, 0x1c, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x54, 0x6f, 0x70, 0x6f,
	0x6c, 0x6f, 0x67, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x52, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e,
	0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x4c, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x74, 0x6c, 0x61,
	0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x83, 0x01,
	0x0a, 0x1b, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x54,
	0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x2f, 0x0a,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x33,
	0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x61,
	0x74, 0x6c, 0x61, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e, 0x54,
	0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x04, 0x6b,
	0x69, 0x6e, 0x64, 0x22, 0x7b, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x29, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x6b,
	0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x61, 0x74, 0x6c, 0x61,
	0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e, 0x54, 0x6f, 0x70, 0x6f,
	0x6c, 0x6f, 0x67, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64,
	0x22, 0x9d, 0x01, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x6d, 0x69, 0x73, 0x65, 0x54, 0x6f, 0x70, 0x6f,
	0x6c, 0x6f, 0x67, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x6d, 0x69, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x6f,
	0x6d, 0x69, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65,
	0x6e, 0x73, 0x75, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x6f, 0x64,
	0x65, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e,
	0x73, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2a, 0x32, 0x0a, 0x0e, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x41, 0x44, 0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x4d, 0x4f,
	0x56, 0x45, 0x10, 0x02, 0x32, 0xc5, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73,
	0x75, 0x73, 0x12, 0x70, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x54, 0x6f, 0x70,
	0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x2d, 0x2e, 0x61, 0x74,
	0x6c, 0x61, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x65, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x74, 0x6c,
	0x61, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x6d, 0x69, 0x73, 0x65, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x54, 0x6f,
	0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x15, 0x2e, 0x61,
	0x74, 0x6c, 0x61, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x1a, 0x15, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x73,
	0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a,
	0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_consensus_consensus_proto_rawDescOnce sync.Once
	file_consensus_consensus_proto_rawDescData = file_consensus_consensus_proto_rawDesc
)

func file_consensus_consensus_proto_rawDescGZIP() []byte {
	file_consensus_consensus_proto_rawDescOnce.Do(func() {
		file_consensus_consensus_proto_rawDescData = protoimpl.X.CompressGZIP(file_consensus_consensus_proto_rawDescData)
	})
	return file_consensus_consensus_proto_rawDescData
}

var file_consensus_consensus_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_consensus_consensus_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_consensus_consensus_proto_goTypes = []interface{}{
	(TopologyChange)(0),                  // 0: atlas.consensus.TopologyChange
	(*Node)(nil),                         // 1: atlas.consensus.Node
	(*Region)(nil),                       // 2: atlas.consensus.Region
	(*ProposeTopologyChangeRequest)(nil), // 3: atlas.consensus.ProposeTopologyChangeRequest
	(*ProposeRegionTopologyChange)(nil),  // 4: atlas.consensus.ProposeRegionTopologyChange
	(*ProposeNodeTopologyChange)(nil),    // 5: atlas.consensus.ProposeNodeTopologyChange
	(*PromiseTopologyChange)(nil),        // 6: atlas.consensus.PromiseTopologyChange
}
var file_consensus_consensus_proto_depIdxs = []int32{
	4,  // 0: atlas.consensus.ProposeTopologyChangeRequest.regionChange:type_name -> atlas.consensus.ProposeRegionTopologyChange
	5,  // 1: atlas.consensus.ProposeTopologyChangeRequest.nodeChange:type_name -> atlas.consensus.ProposeNodeTopologyChange
	2,  // 2: atlas.consensus.ProposeRegionTopologyChange.region:type_name -> atlas.consensus.Region
	0,  // 3: atlas.consensus.ProposeRegionTopologyChange.kind:type_name -> atlas.consensus.TopologyChange
	1,  // 4: atlas.consensus.ProposeNodeTopologyChange.node:type_name -> atlas.consensus.Node
	0,  // 5: atlas.consensus.ProposeNodeTopologyChange.kind:type_name -> atlas.consensus.TopologyChange
	1,  // 6: atlas.consensus.PromiseTopologyChange.node:type_name -> atlas.consensus.Node
	2,  // 7: atlas.consensus.PromiseTopologyChange.region:type_name -> atlas.consensus.Region
	3,  // 8: atlas.consensus.Consensus.ProposeTopologyChange:input_type -> atlas.consensus.ProposeTopologyChangeRequest
	1,  // 9: atlas.consensus.Consensus.AcceptTopologyChange:input_type -> atlas.consensus.Node
	6,  // 10: atlas.consensus.Consensus.ProposeTopologyChange:output_type -> atlas.consensus.PromiseTopologyChange
	1,  // 11: atlas.consensus.Consensus.AcceptTopologyChange:output_type -> atlas.consensus.Node
	10, // [10:12] is the sub-list for method output_type
	8,  // [8:10] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_consensus_consensus_proto_init() }
func file_consensus_consensus_proto_init() {
	if File_consensus_consensus_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_consensus_consensus_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_consensus_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Region); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_consensus_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposeTopologyChangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_consensus_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposeRegionTopologyChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_consensus_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposeNodeTopologyChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_consensus_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromiseTopologyChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_consensus_consensus_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ProposeTopologyChangeRequest_RegionChange)(nil),
		(*ProposeTopologyChangeRequest_NodeChange)(nil),
	}
	file_consensus_consensus_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*PromiseTopologyChange_Node)(nil),
		(*PromiseTopologyChange_Region)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_consensus_consensus_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_consensus_consensus_proto_goTypes,
		DependencyIndexes: file_consensus_consensus_proto_depIdxs,
		EnumInfos:         file_consensus_consensus_proto_enumTypes,
		MessageInfos:      file_consensus_consensus_proto_msgTypes,
	}.Build()
	File_consensus_consensus_proto = out.File
	file_consensus_consensus_proto_rawDesc = nil
	file_consensus_consensus_proto_goTypes = nil
	file_consensus_consensus_proto_depIdxs = nil
}
